{"remainingRequest":"/home/goshva/vue/site-telega-chat/node_modules/babel-loader/lib/index.js!/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/goshva/vue/site-telega-chat/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/goshva/vue/site-telega-chat/src/components/Chat.vue","mtime":1606161414705},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/babel-loader/lib/index.js","mtime":1606029581549},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js","mtime":1606029583914}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9ob21lL2dvc2h2YS92dWUvc2l0ZS10ZWxlZ2EtY2hhdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NoYXQnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnJywKICAgICAgaWRlbnRpdHk6IDAsCiAgICAgIHBhcnRpY2lwYW50czogW3sKICAgICAgICBpZDogJ3VzZXIxJywKICAgICAgICBuYW1lOiAn0JXQs9C+0YAnLAogICAgICAgIGltYWdlVXJsOiAnaHR0cHM6Ly9xdWVzdDAucnUvaW1hZ2VzL2luZGV4LTMtMy0zOTB4MzMyLmpwZycKICAgICAgfSwgewogICAgICAgIGlkOiAndXNlcjInLAogICAgICAgIG5hbWU6ICdTdXBwb3J0JywKICAgICAgICBpbWFnZVVybDogJ2h0dHBzOi8vYXZhdGFyczMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMzcwMTg4MzI/cz0yMDAmdj00JwogICAgICB9XSwKICAgICAgLy8gdGhlIGxpc3Qgb2YgYWxsIHRoZSBwYXJ0aWNpcGFudCBvZiB0aGUgY29udmVyc2F0aW9uLiBgbmFtZWAgaXMgdGhlIHVzZXIgbmFtZSwgYGlkYCBpcyB1c2VkIHRvIGVzdGFibGlzaCB0aGUgYXV0aG9yIG9mIGEgbWVzc2FnZSwgYGltYWdlVXJsYCBpcyBzdXBwb3NlZCB0byBiZSB0aGUgdXNlciBhdmF0YXIuCiAgICAgIHRpdGxlSW1hZ2VVcmw6ICdodHRwczovL2Euc2xhY2stZWRnZS5jb20vNjZmOS9pbWcvYXZhdGFycy10ZWFtcy9hdmFfMDAwMS0zNC5wbmcnLAogICAgICBtZXNzYWdlTGlzdDogW3sKICAgICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgYXV0aG9yOiAidXNlcjEiLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIHRleHQ6ICJcdTA0MTRcdTA0M0VcdTA0MzFcdTA0NDBcdTA0M0UgXHUwNDNGXHUwNDNFXHUwNDM2XHUwNDMwXHUwNDNCXHUwNDNFXHUwNDMyXHUwNDMwXHUwNDQyXHUwNDRDLiBcdTA0MjdcdTA0MzVcdTA0M0MgXHUwNDNDXHUwNDRCIFx1MDQzQ1x1MDQzRVx1MDQzNlx1MDQzNVx1MDQzQyBcdTA0M0ZcdTA0M0VcdTA0M0NcdTA0M0VcdTA0NDdcdTA0NEM/IgogICAgICAgIH0KICAgICAgfV0sCiAgICAgIC8vIHRoZSBsaXN0IG9mIHRoZSBtZXNzYWdlcyB0byBzaG93LCBjYW4gYmUgcGFnaW5hdGVkIGFuZCBhZGp1c3RlZCBkeW5hbWljYWxseQogICAgICBuZXdNZXNzYWdlc0NvdW50OiAwLAogICAgICBpc0NoYXRPcGVuOiBmYWxzZSwKICAgICAgLy8gdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIGNoYXQgd2luZG93IHNob3VsZCBiZSBvcGVuIG9yIGNsb3NlZAogICAgICBzaG93VHlwaW5nSW5kaWNhdG9yOiAnJywKICAgICAgLy8gd2hlbiBzZXQgdG8gYSB2YWx1ZSBtYXRjaGluZyB0aGUgcGFydGljaXBhbnQuaWQgaXQgc2hvd3MgdGhlIHR5cGluZyBpbmRpY2F0b3IgZm9yIHRoZSBzcGVjaWZpYyB1c2VyCiAgICAgIGNvbG9yczogewogICAgICAgIGhlYWRlcjogewogICAgICAgICAgYmc6ICcjNGU4Y2ZmJywKICAgICAgICAgIHRleHQ6ICcjZmZmZmZmJwogICAgICAgIH0sCiAgICAgICAgbGF1bmNoZXI6IHsKICAgICAgICAgIGJnOiAnIzRlOGNmZicKICAgICAgICB9LAogICAgICAgIG1lc3NhZ2VMaXN0OiB7CiAgICAgICAgICBiZzogJyNmZmZmZmYnCiAgICAgICAgfSwKICAgICAgICBzZW50TWVzc2FnZTogewogICAgICAgICAgYmc6ICcjNGU4Y2ZmJywKICAgICAgICAgIHRleHQ6ICcjZmZmZmZmJwogICAgICAgIH0sCiAgICAgICAgcmVjZWl2ZWRNZXNzYWdlOiB7CiAgICAgICAgICBiZzogJyNlYWVhZWEnLAogICAgICAgICAgdGV4dDogJyMyMjIyMjInCiAgICAgICAgfSwKICAgICAgICB1c2VySW5wdXQ6IHsKICAgICAgICAgIGJnOiAnI2Y0ZjdmOScsCiAgICAgICAgICB0ZXh0OiAnIzU2NTg2NycKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8vIHNwZWNpZmllcyB0aGUgY29sb3Igc2NoZW1lIGZvciB0aGUgY29tcG9uZW50CiAgICAgIGFsd2F5c1Njcm9sbFRvQm90dG9tOiBmYWxzZSwKICAgICAgLy8gd2hlbiBzZXQgdG8gdHJ1ZSBhbHdheXMgc2Nyb2xscyB0aGUgY2hhdCB0byB0aGUgYm90dG9tIHdoZW4gbmV3IGV2ZW50cyBhcmUgaW4gKG5ldyBtZXNzYWdlLCB1c2VyIHN0YXJ0cyB0eXBpbmcuLi4pCiAgICAgIG1lc3NhZ2VTdHlsaW5nOiB0cnVlIC8vIGVuYWJsZXMgKmJvbGQqIC9lbXBoLyBfdW5kZXJsaW5lXyBhbmQgc3VjaCAobW9yZSBpbmZvIGF0IGdpdGh1Yi5jb20vbWF0dGV6emEvbXNnZG93bikKCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc2VuZE1lc3NhZ2U6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKHRleHQpIHsKICAgICAgaWYgKHRleHQubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMubmV3TWVzc2FnZXNDb3VudCA9IHRoaXMuaXNDaGF0T3BlbiA/IHRoaXMubmV3TWVzc2FnZXNDb3VudCA6IHRoaXMubmV3TWVzc2FnZXNDb3VudCArIDE7CiAgICAgICAgdGhpcy5vbk1lc3NhZ2VXYXNTZW50KHsKICAgICAgICAgIGF1dGhvcjogJ3N1cHBvcnQnLAogICAgICAgICAgdHlwZTogJ3RleHQnLAogICAgICAgICAgZGF0YTogewogICAgICAgICAgICB0ZXh0OiB0ZXh0CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gLy8gJHNvY2tldCBpcyBbV2ViU29ja2V0XShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2ViU29ja2V0KSBpbnN0YW5jZQogICAgICAvLyBvciB3aXRoIHtmb3JtYXQ6ICdqc29uJ30gZW5hYmxlZAogICAgICAvL3RoaXMuJHNvY2tldC5zZW5kT2JqKGpzb24pCgogICAgfSwKICAgIG9uTWVzc2FnZVdhc1NlbnQ6IGZ1bmN0aW9uIG9uTWVzc2FnZVdhc1NlbnQobWVzc2FnZSkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBzZW5kcyBhIG1lc3NhZ2UKICAgICAgdmFyIGpzb24gPSBbJ2ZlZWRiYWNrX21lc3NhZ2VzJywgewogICAgICAgIGlkZW50aXR5OiB0aGlzLmlkZW50aXR5LAogICAgICAgIHRleHQ6IG1lc3NhZ2UuZGF0YS50ZXh0LAogICAgICAgIHBlcnNvbjogJ3dlYi3QmtC70LjQtdC90YInCiAgICAgIH1dOwogICAgICB0aGlzLiRzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShqc29uKSk7CiAgICAgIHRoaXMubWVzc2FnZUxpc3QgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMubWVzc2FnZUxpc3QpLCBbbWVzc2FnZV0pOwogICAgfSwKICAgIG9wZW5DaGF0OiBmdW5jdGlvbiBvcGVuQ2hhdCgpIHsKICAgICAgLy8gY2FsbGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSBmYWIgYnV0dG9uIHRvIG9wZW4gdGhlIGNoYXQKICAgICAgdGhpcy5pc0NoYXRPcGVuID0gdHJ1ZTsKICAgICAgdGhpcy5uZXdNZXNzYWdlc0NvdW50ID0gMDsKICAgIH0sCiAgICBjbG9zZUNoYXQ6IGZ1bmN0aW9uIGNsb3NlQ2hhdCgpIHsKICAgICAgLy8gY2FsbGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSBib3R0b24gdG8gY2xvc2UgdGhlIGNoYXQKICAgICAgdGhpcy5pc0NoYXRPcGVuID0gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlU2Nyb2xsVG9Ub3A6IGZ1bmN0aW9uIGhhbmRsZVNjcm9sbFRvVG9wKCkgey8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIHNjcm9sbHMgbWVzc2FnZSBsaXN0IHRvIHRvcAogICAgICAvLyBsZXZlcmFnZSBwYWdpbmF0aW9uIGZvciBsb2FkaW5nIGFub3RoZXIgcGFnZSBvZiBtZXNzYWdlcwogICAgfSwKICAgIGhhbmRsZU9uVHlwZTogZnVuY3Rpb24gaGFuZGxlT25UeXBlKCkgewogICAgICBjb25zb2xlLmxvZygnRW1pdCB0eXBpbmcgZXZlbnQnKTsKICAgIH0sCiAgICBlZGl0TWVzc2FnZTogZnVuY3Rpb24gZWRpdE1lc3NhZ2UobWVzc2FnZSkgewogICAgICB2YXIgbSA9IHRoaXMubWVzc2FnZUxpc3QuZmluZChmdW5jdGlvbiAobSkgewogICAgICAgIHJldHVybiBtLmlkID09PSBtZXNzYWdlLmlkOwogICAgICB9KTsKICAgICAgbS5pc0VkaXRlZCA9IHRydWU7CiAgICAgIG0uZGF0YS50ZXh0ID0gbWVzc2FnZS5kYXRhLnRleHQ7CiAgICB9LAogICAgc291bmRQbGF5OiBmdW5jdGlvbiBzb3VuZFBsYXkoKSB7CiAgICAgIHZhciBhdWRpbyA9IG5ldyBBdWRpbygnaW4ubXAzJyk7CiAgICAgIGF1ZGlvLnBsYXkoKTsKICAgIH0sCiAgICBpZGdlbjogZnVuY3Rpb24gaWRnZW4obGVuZ3RoKSB7CiAgICAgIHZhciByZXN1bHQgPSAnJzsKICAgICAgdmFyIGNoYXJhY3RlcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknOwogICAgICB2YXIgY2hhcmFjdGVyc0xlbmd0aCA9IGNoYXJhY3RlcnMubGVuZ3RoOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgIHJlc3VsdCArPSBjaGFyYWN0ZXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFyYWN0ZXJzTGVuZ3RoKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBpZiAobG9jYWxTdG9yYWdlLm5hbWUpIHsKICAgICAgdGhpcy5uYW1lID0gbG9jYWxTdG9yYWdlLm5hbWU7CiAgICB9CgogICAgaWYgKGxvY2FsU3RvcmFnZS5pZGVudGl0eSkgewogICAgICB0aGlzLmlkZW50aXR5ID0gbG9jYWxTdG9yYWdlLmlkZW50aXR5OwogICAgfSBlbHNlIHsKICAgICAgbG9jYWxTdG9yYWdlLmlkZW50aXR5ID0gdGhpcy5pZGdlbihNYXRoLnJhbmRvbSgpICogNDggKyAxNik7CiAgICAgIHRoaXMuaWRlbnRpdHkgPSBsb2NhbFN0b3JhZ2UuaWRlbnRpdHk7CiAgICB9CgogICAgdGhpcy4kb3B0aW9ucy5zb2NrZXRzLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChldmVudCkgewogICAgICBjb25zb2xlLmxvZyhldmVudCk7CiAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShldmVudC5kYXRhKTsKICAgICAgdmFyIGxpbmUgPSBkYXRhWzFdLnRleHQ7IC8vICAgIGxldCBzZXJ2ZGF0YSA9ICBkYXRhLmRhdGFbMV07IAogICAgICAvLyAgICBjb25zb2xlLmxvZyhzZXJ2ZGF0YSkKCiAgICAgIGNvbnNvbGUubG9nKGxpbmUpOwoKICAgICAgaWYgKGRhdGFbMV0uZGlyZWN0aW9uID09ICJyZXBseSIpIHsKICAgICAgICBfdGhpcy5zb3VuZFBsYXkoKTsKCiAgICAgICAgX3RoaXMubWVzc2FnZUxpc3QgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KF90aGlzLm1lc3NhZ2VMaXN0KSwgW3sKICAgICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICAgIGF1dGhvcjogInN1cHAiLAogICAgICAgICAgZGF0YTogewogICAgICAgICAgICB0ZXh0OiBsaW5lCiAgICAgICAgICB9CiAgICAgICAgfV0pOwogICAgICB9CiAgICB9OyAvLyB7IHR5cGU6ICd0ZXh0JywgYXV0aG9yOiBgdXNlcjFgLCBkYXRhOiB7IHRleHQ6IGDQlNC+0LHRgNC+INC/0L7QttCw0LvQvtCy0LDRgtGMLiDQp9C10Lwg0LzRiyDQvNC+0LbQtdC8INC/0L7QvNC+0YfRjD9gIH0gfQogICAgLy8gICAgdGhpcy4kb3B0aW9ucy5zb2NrZXRzLm9ubWVzc2FnZSA9IChkYXRhKSA9PiB0aGlzLm1lc3NhZ2VMaXN0LnB1c2goZGF0YSkKCiAgfQp9Ow=="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <beautiful-chat\n      :participants=\"participants\"\n      :titleImageUrl=\"titleImageUrl\"\n      :onMessageWasSent=\"onMessageWasSent\"\n      :messageList=\"messageList\"\n      :newMessagesCount=\"newMessagesCount\"\n      :isOpen=\"isChatOpen\"\n      :close=\"closeChat\"\n      :open=\"openChat\"\n      :showEmoji=\"true\"\n      :showFile=\"true\"\n      :showEdition=\"true\"\n      :showDeletion=\"true\"\n      :deletionConfirmation=\"true\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :showLauncher=\"true\"\n      :showCloseButton=\"true\"\n      :colors=\"colors\"\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\n      :disableUserListToggle=\"false\"\n      :messageStyling=\"messageStyling\"\n      @onType=\"handleOnType\"\n      @edit=\"editMessage\" />\n      \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      name: '',\n      identity: 0,\n      participants: [\n        {\n          id: 'user1',\n          name: 'Егор',\n          imageUrl: 'https://quest0.ru/images/index-3-3-390x332.jpg'\n        },\n        {\n          id: 'user2',\n          name: 'Support',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/37018832?s=200&v=4'\n        }\n      ], // the list of all the participant of the conversation. `name` is the user name, `id` is used to establish the author of a message, `imageUrl` is supposed to be the user avatar.\n      titleImageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png',\n      messageList: [\n          { type: 'text', author: `user1`, data: { text: `Добро пожаловать. Чем мы можем помочь?` } }\n      ], // the list of the messages to show, can be paginated and adjusted dynamically\n      newMessagesCount: 0,\n      isChatOpen: false, // to determine whether the chat window should be open or closed\n      showTypingIndicator: '', // when set to a value matching the participant.id it shows the typing indicator for the specific user\n      colors: {\n        header: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        launcher: {\n          bg: '#4e8cff'\n        },\n        messageList: {\n          bg: '#ffffff'\n        },\n        sentMessage: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        receivedMessage: {\n          bg: '#eaeaea',\n          text: '#222222'\n        },\n        userInput: {\n          bg: '#f4f7f9',\n          text: '#565867'\n        }\n      }, // specifies the color scheme for the component\n      alwaysScrollToBottom: false, // when set to true always scrolls the chat to the bottom when new events are in (new message, user starts typing...)\n      messageStyling: true // enables *bold* /emph/ _underline_ and such (more info at github.com/mattezza/msgdown)\n    }\n  },\n  methods: {\n    sendMessage (text) {\n\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        \n        this.onMessageWasSent({ author: 'support', type: 'text', data: { text } })\n      }\n              // $socket is [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket) instance\n        // or with {format: 'json'} enabled\n\n        //this.$socket.sendObj(json)\n    },\n    onMessageWasSent (message) {\n      // called when the user sends a message\n      let json = ['feedback_messages', {\n          identity: this.identity,\n          text: message.data.text,\n          person: 'web-Клиент'\n      }]\n      this.$socket.send(JSON.stringify(json))\n      this.messageList = [ ...this.messageList, message ]\n    },\n    openChat () {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat () {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    handleScrollToTop () {\n      // called when the user scrolls message list to top\n      // leverage pagination for loading another page of messages\n    },\n    handleOnType () {\n      console.log('Emit typing event')\n    },\n    editMessage(message){\n      const m = this.messageList.find(m=>m.id === message.id);\n      m.isEdited = true;\n      m.data.text = message.data.text;\n    },\n    soundPlay(){\n      var audio = new Audio('in.mp3');\n      audio.play();\n    },\n    idgen(length){\n      var result           = '';\n      var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var charactersLength = characters.length;\n      for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      return result;\n    }\n  },\n  mounted() {\n    if (localStorage.name) {\n      this.name = localStorage.name;\n    }\n    if (localStorage.identity) {\n      this.identity = localStorage.identity;\n    }\n    else {\n      localStorage.identity =  this.idgen(Math.random()*48+16);\n      this.identity = localStorage.identity;\n\n    }\n    this.$options.sockets.onmessage = (event) =>  { \n           console.log(event)\n      const data = JSON.parse(event.data)\n      const line = data[1].text;\n//    let servdata =  data.data[1]; \n//    console.log(servdata)\n      console.log(line)\n      if (data[1].direction == \"reply\"){\n        this.soundPlay(); \n        this.messageList = [ ...this.messageList,  { type: 'text', author: `supp`, data: { text :line}} ] }\n      }\n    // { type: 'text', author: `user1`, data: { text: `Добро пожаловать. Чем мы можем помочь?` } }\n    //    this.$options.sockets.onmessage = (data) => this.messageList.push(data)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}