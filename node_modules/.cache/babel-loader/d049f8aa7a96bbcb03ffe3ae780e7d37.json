{"remainingRequest":"/home/goshva/vue/site-telega-chat/node_modules/babel-loader/lib/index.js!/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/goshva/vue/site-telega-chat/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/goshva/vue/site-telega-chat/src/components/Chat.vue","mtime":1606042424806},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/babel-loader/lib/index.js","mtime":1606029581549},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js","mtime":1606029583914}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL2hvbWUvZ29zaHZhL3Z1ZS9zaXRlLXRlbGVnYS1jaGF0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2hhdCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhcnRpY2lwYW50czogW3sKICAgICAgICBpZDogJ3VzZXIxJywKICAgICAgICBuYW1lOiAnTWF0dGVvJywKICAgICAgICBpbWFnZVVybDogJ2h0dHBzOi8vYXZhdGFyczMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMTkxNTk4OT9zPTIzMCZ2PTQnCiAgICAgIH0sIHsKICAgICAgICBpZDogJ3VzZXIyJywKICAgICAgICBuYW1lOiAnU3VwcG9ydCcsCiAgICAgICAgaW1hZ2VVcmw6ICdodHRwczovL2F2YXRhcnMzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzM3MDE4ODMyP3M9MjAwJnY9NCcKICAgICAgfV0sCiAgICAgIC8vIHRoZSBsaXN0IG9mIGFsbCB0aGUgcGFydGljaXBhbnQgb2YgdGhlIGNvbnZlcnNhdGlvbi4gYG5hbWVgIGlzIHRoZSB1c2VyIG5hbWUsIGBpZGAgaXMgdXNlZCB0byBlc3RhYmxpc2ggdGhlIGF1dGhvciBvZiBhIG1lc3NhZ2UsIGBpbWFnZVVybGAgaXMgc3VwcG9zZWQgdG8gYmUgdGhlIHVzZXIgYXZhdGFyLgogICAgICB0aXRsZUltYWdlVXJsOiAnaHR0cHM6Ly9hLnNsYWNrLWVkZ2UuY29tLzY2ZjkvaW1nL2F2YXRhcnMtdGVhbXMvYXZhXzAwMDEtMzQucG5nJywKICAgICAgbWVzc2FnZUxpc3Q6IFt7CiAgICAgICAgdHlwZTogJ3RleHQnLAogICAgICAgIGF1dGhvcjogIm1lIiwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICB0ZXh0OiAiU2F5IHllcyEiCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgdHlwZTogJ3RleHQnLAogICAgICAgIGF1dGhvcjogInVzZXIxIiwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICB0ZXh0OiAiTm8uIgogICAgICAgIH0KICAgICAgfV0sCiAgICAgIC8vIHRoZSBsaXN0IG9mIHRoZSBtZXNzYWdlcyB0byBzaG93LCBjYW4gYmUgcGFnaW5hdGVkIGFuZCBhZGp1c3RlZCBkeW5hbWljYWxseQogICAgICBuZXdNZXNzYWdlc0NvdW50OiAwLAogICAgICBpc0NoYXRPcGVuOiBmYWxzZSwKICAgICAgLy8gdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIGNoYXQgd2luZG93IHNob3VsZCBiZSBvcGVuIG9yIGNsb3NlZAogICAgICBzaG93VHlwaW5nSW5kaWNhdG9yOiAnJywKICAgICAgLy8gd2hlbiBzZXQgdG8gYSB2YWx1ZSBtYXRjaGluZyB0aGUgcGFydGljaXBhbnQuaWQgaXQgc2hvd3MgdGhlIHR5cGluZyBpbmRpY2F0b3IgZm9yIHRoZSBzcGVjaWZpYyB1c2VyCiAgICAgIGNvbG9yczogewogICAgICAgIGhlYWRlcjogewogICAgICAgICAgYmc6ICcjNGU4Y2ZmJywKICAgICAgICAgIHRleHQ6ICcjZmZmZmZmJwogICAgICAgIH0sCiAgICAgICAgbGF1bmNoZXI6IHsKICAgICAgICAgIGJnOiAnIzRlOGNmZicKICAgICAgICB9LAogICAgICAgIG1lc3NhZ2VMaXN0OiB7CiAgICAgICAgICBiZzogJyNmZmZmZmYnCiAgICAgICAgfSwKICAgICAgICBzZW50TWVzc2FnZTogewogICAgICAgICAgYmc6ICcjNGU4Y2ZmJywKICAgICAgICAgIHRleHQ6ICcjZmZmZmZmJwogICAgICAgIH0sCiAgICAgICAgcmVjZWl2ZWRNZXNzYWdlOiB7CiAgICAgICAgICBiZzogJyNlYWVhZWEnLAogICAgICAgICAgdGV4dDogJyMyMjIyMjInCiAgICAgICAgfSwKICAgICAgICB1c2VySW5wdXQ6IHsKICAgICAgICAgIGJnOiAnI2Y0ZjdmOScsCiAgICAgICAgICB0ZXh0OiAnIzU2NTg2NycKICAgICAgICB9CiAgICAgIH0sCiAgICAgIC8vIHNwZWNpZmllcyB0aGUgY29sb3Igc2NoZW1lIGZvciB0aGUgY29tcG9uZW50CiAgICAgIGFsd2F5c1Njcm9sbFRvQm90dG9tOiBmYWxzZSwKICAgICAgLy8gd2hlbiBzZXQgdG8gdHJ1ZSBhbHdheXMgc2Nyb2xscyB0aGUgY2hhdCB0byB0aGUgYm90dG9tIHdoZW4gbmV3IGV2ZW50cyBhcmUgaW4gKG5ldyBtZXNzYWdlLCB1c2VyIHN0YXJ0cyB0eXBpbmcuLi4pCiAgICAgIG1lc3NhZ2VTdHlsaW5nOiB0cnVlIC8vIGVuYWJsZXMgKmJvbGQqIC9lbXBoLyBfdW5kZXJsaW5lXyBhbmQgc3VjaCAobW9yZSBpbmZvIGF0IGdpdGh1Yi5jb20vbWF0dGV6emEvbXNnZG93bikKCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc2VuZE1lc3NhZ2U6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKHRleHQpIHsKICAgICAgaWYgKHRleHQubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMubmV3TWVzc2FnZXNDb3VudCA9IHRoaXMuaXNDaGF0T3BlbiA/IHRoaXMubmV3TWVzc2FnZXNDb3VudCA6IHRoaXMubmV3TWVzc2FnZXNDb3VudCArIDE7CiAgICAgICAgdGhpcy5vbk1lc3NhZ2VXYXNTZW50KHsKICAgICAgICAgIGF1dGhvcjogJ3N1cHBvcnQnLAogICAgICAgICAgdHlwZTogJ3RleHQnLAogICAgICAgICAgZGF0YTogewogICAgICAgICAgICB0ZXh0OiB0ZXh0CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBvbk1lc3NhZ2VXYXNTZW50OiBmdW5jdGlvbiBvbk1lc3NhZ2VXYXNTZW50KG1lc3NhZ2UpIHsKICAgICAgLy8gY2FsbGVkIHdoZW4gdGhlIHVzZXIgc2VuZHMgYSBtZXNzYWdlCiAgICAgIHRoaXMubWVzc2FnZUxpc3QgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMubWVzc2FnZUxpc3QpLCBbbWVzc2FnZV0pOwogICAgfSwKICAgIG9wZW5DaGF0OiBmdW5jdGlvbiBvcGVuQ2hhdCgpIHsKICAgICAgLy8gY2FsbGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSBmYWIgYnV0dG9uIHRvIG9wZW4gdGhlIGNoYXQKICAgICAgdGhpcy5pc0NoYXRPcGVuID0gdHJ1ZTsKICAgICAgdGhpcy5uZXdNZXNzYWdlc0NvdW50ID0gMDsKICAgIH0sCiAgICBjbG9zZUNoYXQ6IGZ1bmN0aW9uIGNsb3NlQ2hhdCgpIHsKICAgICAgLy8gY2FsbGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSBib3R0b24gdG8gY2xvc2UgdGhlIGNoYXQKICAgICAgdGhpcy5pc0NoYXRPcGVuID0gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlU2Nyb2xsVG9Ub3A6IGZ1bmN0aW9uIGhhbmRsZVNjcm9sbFRvVG9wKCkgey8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIHNjcm9sbHMgbWVzc2FnZSBsaXN0IHRvIHRvcAogICAgICAvLyBsZXZlcmFnZSBwYWdpbmF0aW9uIGZvciBsb2FkaW5nIGFub3RoZXIgcGFnZSBvZiBtZXNzYWdlcwogICAgfSwKICAgIGhhbmRsZU9uVHlwZTogZnVuY3Rpb24gaGFuZGxlT25UeXBlKCkgewogICAgICBjb25zb2xlLmxvZygnRW1pdCB0eXBpbmcgZXZlbnQnKTsKICAgIH0sCiAgICBlZGl0TWVzc2FnZTogZnVuY3Rpb24gZWRpdE1lc3NhZ2UobWVzc2FnZSkgewogICAgICB2YXIgbSA9IHRoaXMubWVzc2FnZUxpc3QuZmluZChmdW5jdGlvbiAobSkgewogICAgICAgIHJldHVybiBtLmlkID09PSBtZXNzYWdlLmlkOwogICAgICB9KTsKICAgICAgbS5pc0VkaXRlZCA9IHRydWU7CiAgICAgIG0uZGF0YS50ZXh0ID0gbWVzc2FnZS5kYXRhLnRleHQ7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <beautiful-chat\n      :participants=\"participants\"\n      :titleImageUrl=\"titleImageUrl\"\n      :onMessageWasSent=\"onMessageWasSent\"\n      :messageList=\"messageList\"\n      :newMessagesCount=\"newMessagesCount\"\n      :isOpen=\"isChatOpen\"\n      :close=\"closeChat\"\n      :open=\"openChat\"\n      :showEmoji=\"true\"\n      :showFile=\"true\"\n      :showEdition=\"true\"\n      :showDeletion=\"true\"\n      :deletionConfirmation=\"true\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :showLauncher=\"true\"\n      :showCloseButton=\"true\"\n      :colors=\"colors\"\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\n      :disableUserListToggle=\"false\"\n      :messageStyling=\"messageStyling\"\n      @onType=\"handleOnType\"\n      @keyup.enter.native=\"sendMessage\"\n      @edit=\"editMessage\" />\n      test\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      participants: [\n        {\n          id: 'user1',\n          name: 'Matteo',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/1915989?s=230&v=4'\n        },\n        {\n          id: 'user2',\n          name: 'Support',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/37018832?s=200&v=4'\n        }\n      ], // the list of all the participant of the conversation. `name` is the user name, `id` is used to establish the author of a message, `imageUrl` is supposed to be the user avatar.\n      titleImageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png',\n      messageList: [\n          { type: 'text', author: `me`, data: { text: `Say yes!` } },\n          { type: 'text', author: `user1`, data: { text: `No.` } }\n      ], // the list of the messages to show, can be paginated and adjusted dynamically\n      newMessagesCount: 0,\n      isChatOpen: false, // to determine whether the chat window should be open or closed\n      showTypingIndicator: '', // when set to a value matching the participant.id it shows the typing indicator for the specific user\n      colors: {\n        header: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        launcher: {\n          bg: '#4e8cff'\n        },\n        messageList: {\n          bg: '#ffffff'\n        },\n        sentMessage: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        receivedMessage: {\n          bg: '#eaeaea',\n          text: '#222222'\n        },\n        userInput: {\n          bg: '#f4f7f9',\n          text: '#565867'\n        }\n      }, // specifies the color scheme for the component\n      alwaysScrollToBottom: false, // when set to true always scrolls the chat to the bottom when new events are in (new message, user starts typing...)\n      messageStyling: true // enables *bold* /emph/ _underline_ and such (more info at github.com/mattezza/msgdown)\n    }\n  },\n  methods: {\n    sendMessage (text) {\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        this.onMessageWasSent({ author: 'support', type: 'text', data: { text } })\n      }\n    },\n    onMessageWasSent (message) {\n      // called when the user sends a message\n      this.messageList = [ ...this.messageList, message ]\n    },\n    openChat () {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat () {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    handleScrollToTop () {\n      // called when the user scrolls message list to top\n      // leverage pagination for loading another page of messages\n    },\n    handleOnType () {\n      console.log('Emit typing event')\n    },\n    editMessage(message){\n      const m = this.messageList.find(m=>m.id === message.id);\n      m.isEdited = true;\n      m.data.text = message.data.text;\n    }\n  }\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n"],"sourceRoot":"src/components"}]}