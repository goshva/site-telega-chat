{"remainingRequest":"/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/goshva/vue/site-telega-chat/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/goshva/vue/site-telega-chat/src/components/Chat.vue","mtime":1606058928795},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/babel-loader/lib/index.js","mtime":1606029581549},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js","mtime":1606029583914}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2hhdCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhcnRpY2lwYW50czogWwogICAgICAgIHsKICAgICAgICAgIGlkOiAndXNlcjEnLAogICAgICAgICAgbmFtZTogJ01hdHRlbycsCiAgICAgICAgICBpbWFnZVVybDogJ2h0dHBzOi8vYXZhdGFyczMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMTkxNTk4OT9zPTIzMCZ2PTQnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBpZDogJ3VzZXIyJywKICAgICAgICAgIG5hbWU6ICdTdXBwb3J0JywKICAgICAgICAgIGltYWdlVXJsOiAnaHR0cHM6Ly9hdmF0YXJzMy5naXRodWJ1c2VyY29udGVudC5jb20vdS8zNzAxODgzMj9zPTIwMCZ2PTQnCiAgICAgICAgfQogICAgICBdLCAvLyB0aGUgbGlzdCBvZiBhbGwgdGhlIHBhcnRpY2lwYW50IG9mIHRoZSBjb252ZXJzYXRpb24uIGBuYW1lYCBpcyB0aGUgdXNlciBuYW1lLCBgaWRgIGlzIHVzZWQgdG8gZXN0YWJsaXNoIHRoZSBhdXRob3Igb2YgYSBtZXNzYWdlLCBgaW1hZ2VVcmxgIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSB1c2VyIGF2YXRhci4KICAgICAgdGl0bGVJbWFnZVVybDogJ2h0dHBzOi8vYS5zbGFjay1lZGdlLmNvbS82NmY5L2ltZy9hdmF0YXJzLXRlYW1zL2F2YV8wMDAxLTM0LnBuZycsCiAgICAgIG1lc3NhZ2VMaXN0OiBbCiAgICAgICAgICB7IHR5cGU6ICd0ZXh0JywgYXV0aG9yOiBgdXNlcjFgLCBkYXRhOiB7IHRleHQ6IGDQlNC+0LHRgNC+INC/0L7QttCw0LvQvtCy0LDRgtGMLiDQp9C10Lwg0LzRiyDQvNC+0LbQtdC8INC/0L7QvNC+0YfRjD9gIH0gfQogICAgICBdLCAvLyB0aGUgbGlzdCBvZiB0aGUgbWVzc2FnZXMgdG8gc2hvdywgY2FuIGJlIHBhZ2luYXRlZCBhbmQgYWRqdXN0ZWQgZHluYW1pY2FsbHkKICAgICAgbmV3TWVzc2FnZXNDb3VudDogMCwKICAgICAgaXNDaGF0T3BlbjogZmFsc2UsIC8vIHRvIGRldGVybWluZSB3aGV0aGVyIHRoZSBjaGF0IHdpbmRvdyBzaG91bGQgYmUgb3BlbiBvciBjbG9zZWQKICAgICAgc2hvd1R5cGluZ0luZGljYXRvcjogJycsIC8vIHdoZW4gc2V0IHRvIGEgdmFsdWUgbWF0Y2hpbmcgdGhlIHBhcnRpY2lwYW50LmlkIGl0IHNob3dzIHRoZSB0eXBpbmcgaW5kaWNhdG9yIGZvciB0aGUgc3BlY2lmaWMgdXNlcgogICAgICBjb2xvcnM6IHsKICAgICAgICBoZWFkZXI6IHsKICAgICAgICAgIGJnOiAnIzRlOGNmZicsCiAgICAgICAgICB0ZXh0OiAnI2ZmZmZmZicKICAgICAgICB9LAogICAgICAgIGxhdW5jaGVyOiB7CiAgICAgICAgICBiZzogJyM0ZThjZmYnCiAgICAgICAgfSwKICAgICAgICBtZXNzYWdlTGlzdDogewogICAgICAgICAgYmc6ICcjZmZmZmZmJwogICAgICAgIH0sCiAgICAgICAgc2VudE1lc3NhZ2U6IHsKICAgICAgICAgIGJnOiAnIzRlOGNmZicsCiAgICAgICAgICB0ZXh0OiAnI2ZmZmZmZicKICAgICAgICB9LAogICAgICAgIHJlY2VpdmVkTWVzc2FnZTogewogICAgICAgICAgYmc6ICcjZWFlYWVhJywKICAgICAgICAgIHRleHQ6ICcjMjIyMjIyJwogICAgICAgIH0sCiAgICAgICAgdXNlcklucHV0OiB7CiAgICAgICAgICBiZzogJyNmNGY3ZjknLAogICAgICAgICAgdGV4dDogJyM1NjU4NjcnCiAgICAgICAgfQogICAgICB9LCAvLyBzcGVjaWZpZXMgdGhlIGNvbG9yIHNjaGVtZSBmb3IgdGhlIGNvbXBvbmVudAogICAgICBhbHdheXNTY3JvbGxUb0JvdHRvbTogZmFsc2UsIC8vIHdoZW4gc2V0IHRvIHRydWUgYWx3YXlzIHNjcm9sbHMgdGhlIGNoYXQgdG8gdGhlIGJvdHRvbSB3aGVuIG5ldyBldmVudHMgYXJlIGluIChuZXcgbWVzc2FnZSwgdXNlciBzdGFydHMgdHlwaW5nLi4uKQogICAgICBtZXNzYWdlU3R5bGluZzogdHJ1ZSAvLyBlbmFibGVzICpib2xkKiAvZW1waC8gX3VuZGVybGluZV8gYW5kIHN1Y2ggKG1vcmUgaW5mbyBhdCBnaXRodWIuY29tL21hdHRlenphL21zZ2Rvd24pCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZW5kTWVzc2FnZSAodGV4dCkgewoKICAgICAgaWYgKHRleHQubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMubmV3TWVzc2FnZXNDb3VudCA9IHRoaXMuaXNDaGF0T3BlbiA/IHRoaXMubmV3TWVzc2FnZXNDb3VudCA6IHRoaXMubmV3TWVzc2FnZXNDb3VudCArIDEKICAgICAgICAKICAgICAgICB0aGlzLm9uTWVzc2FnZVdhc1NlbnQoeyBhdXRob3I6ICdzdXBwb3J0JywgdHlwZTogJ3RleHQnLCBkYXRhOiB7IHRleHQgfSB9KQogICAgICB9CiAgICAgICAgICAgICAgLy8gJHNvY2tldCBpcyBbV2ViU29ja2V0XShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2ViU29ja2V0KSBpbnN0YW5jZQogICAgICAgIC8vIG9yIHdpdGgge2Zvcm1hdDogJ2pzb24nfSBlbmFibGVkCgogICAgICAgIC8vdGhpcy4kc29ja2V0LnNlbmRPYmooanNvbikKICAgIH0sCiAgICBvbk1lc3NhZ2VXYXNTZW50IChtZXNzYWdlKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIHNlbmRzIGEgbWVzc2FnZQogICAgICBsZXQganNvbiA9IFsnZmVlZGJhY2tfbWVzc2FnZXMnLCB7CiAgICAgICAgICB0ZXh0OiBtZXNzYWdlLmRhdGEudGV4dCwKICAgICAgICAgIHBlcnNvbjogJ3dlYi3QmtC70LjQtdC90YInCiAgICAgIH1dCiAgICAgIHRoaXMuJHNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGpzb24pKQogICAgICB0aGlzLm1lc3NhZ2VMaXN0ID0gWyAuLi50aGlzLm1lc3NhZ2VMaXN0LCBtZXNzYWdlIF0KICAgIH0sCiAgICBvcGVuQ2hhdCAoKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgZmFiIGJ1dHRvbiB0byBvcGVuIHRoZSBjaGF0CiAgICAgIHRoaXMuaXNDaGF0T3BlbiA9IHRydWUKICAgICAgdGhpcy5uZXdNZXNzYWdlc0NvdW50ID0gMAogICAgfSwKICAgIGNsb3NlQ2hhdCAoKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgYm90dG9uIHRvIGNsb3NlIHRoZSBjaGF0CiAgICAgIHRoaXMuaXNDaGF0T3BlbiA9IGZhbHNlCiAgICB9LAogICAgaGFuZGxlU2Nyb2xsVG9Ub3AgKCkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBzY3JvbGxzIG1lc3NhZ2UgbGlzdCB0byB0b3AKICAgICAgLy8gbGV2ZXJhZ2UgcGFnaW5hdGlvbiBmb3IgbG9hZGluZyBhbm90aGVyIHBhZ2Ugb2YgbWVzc2FnZXMKICAgIH0sCiAgICBoYW5kbGVPblR5cGUgKCkgewogICAgICBjb25zb2xlLmxvZygnRW1pdCB0eXBpbmcgZXZlbnQnKQogICAgfSwKICAgIGVkaXRNZXNzYWdlKG1lc3NhZ2UpewogICAgICBjb25zdCBtID0gdGhpcy5tZXNzYWdlTGlzdC5maW5kKG09Pm0uaWQgPT09IG1lc3NhZ2UuaWQpOwogICAgICBtLmlzRWRpdGVkID0gdHJ1ZTsKICAgICAgbS5kYXRhLnRleHQgPSBtZXNzYWdlLmRhdGEudGV4dDsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMuJG9wdGlvbnMuc29ja2V0cy5vbm1lc3NhZ2UgPSAoZXZlbnQpID0+ICB7IAogICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50KQogICAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShldmVudC5kYXRhKQogICAgICBjb25zdCBsaW5lID0gZGF0YS5kYXRhOwovLyAgICBsZXQgc2VydmRhdGEgPSAgZGF0YS5kYXRhWzFdOyAKLy8gICAgY29uc29sZS5sb2coc2VydmRhdGEpCiAgICAgLy8gY29uc29sZS5sb2coZGF0YVsxXS50ZXh0KQogICAgICB0aGlzLm1lc3NhZ2VMaXN0ID0gWyAuLi50aGlzLm1lc3NhZ2VMaXN0LCAgeyB0eXBlOiAndGV4dCcsIGF1dGhvcjogYHVzZXIxYCwgZGF0YTogeyB0ZXh0IDpsaW5lLnRleHQgfX0gXSB9CiAgICAvLyB7IHR5cGU6ICd0ZXh0JywgYXV0aG9yOiBgdXNlcjFgLCBkYXRhOiB7IHRleHQ6IGDQlNC+0LHRgNC+INC/0L7QttCw0LvQvtCy0LDRgtGMLiDQp9C10Lwg0LzRiyDQvNC+0LbQtdC8INC/0L7QvNC+0YfRjD9gIH0gfQogICAgLy8gICAgdGhpcy4kb3B0aW9ucy5zb2NrZXRzLm9ubWVzc2FnZSA9IChkYXRhKSA9PiB0aGlzLm1lc3NhZ2VMaXN0LnB1c2goZGF0YSkKICB9Cn0K"},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <beautiful-chat\n      :participants=\"participants\"\n      :titleImageUrl=\"titleImageUrl\"\n      :onMessageWasSent=\"onMessageWasSent\"\n      :messageList=\"messageList\"\n      :newMessagesCount=\"newMessagesCount\"\n      :isOpen=\"isChatOpen\"\n      :close=\"closeChat\"\n      :open=\"openChat\"\n      :showEmoji=\"true\"\n      :showFile=\"true\"\n      :showEdition=\"true\"\n      :showDeletion=\"true\"\n      :deletionConfirmation=\"true\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :showLauncher=\"true\"\n      :showCloseButton=\"true\"\n      :colors=\"colors\"\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\n      :disableUserListToggle=\"false\"\n      :messageStyling=\"messageStyling\"\n      @onType=\"handleOnType\"\n      @edit=\"editMessage\" />\n      \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      participants: [\n        {\n          id: 'user1',\n          name: 'Matteo',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/1915989?s=230&v=4'\n        },\n        {\n          id: 'user2',\n          name: 'Support',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/37018832?s=200&v=4'\n        }\n      ], // the list of all the participant of the conversation. `name` is the user name, `id` is used to establish the author of a message, `imageUrl` is supposed to be the user avatar.\n      titleImageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png',\n      messageList: [\n          { type: 'text', author: `user1`, data: { text: `Добро пожаловать. Чем мы можем помочь?` } }\n      ], // the list of the messages to show, can be paginated and adjusted dynamically\n      newMessagesCount: 0,\n      isChatOpen: false, // to determine whether the chat window should be open or closed\n      showTypingIndicator: '', // when set to a value matching the participant.id it shows the typing indicator for the specific user\n      colors: {\n        header: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        launcher: {\n          bg: '#4e8cff'\n        },\n        messageList: {\n          bg: '#ffffff'\n        },\n        sentMessage: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        receivedMessage: {\n          bg: '#eaeaea',\n          text: '#222222'\n        },\n        userInput: {\n          bg: '#f4f7f9',\n          text: '#565867'\n        }\n      }, // specifies the color scheme for the component\n      alwaysScrollToBottom: false, // when set to true always scrolls the chat to the bottom when new events are in (new message, user starts typing...)\n      messageStyling: true // enables *bold* /emph/ _underline_ and such (more info at github.com/mattezza/msgdown)\n    }\n  },\n  methods: {\n    sendMessage (text) {\n\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        \n        this.onMessageWasSent({ author: 'support', type: 'text', data: { text } })\n      }\n              // $socket is [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket) instance\n        // or with {format: 'json'} enabled\n\n        //this.$socket.sendObj(json)\n    },\n    onMessageWasSent (message) {\n      // called when the user sends a message\n      let json = ['feedback_messages', {\n          text: message.data.text,\n          person: 'web-Клиент'\n      }]\n      this.$socket.send(JSON.stringify(json))\n      this.messageList = [ ...this.messageList, message ]\n    },\n    openChat () {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat () {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    handleScrollToTop () {\n      // called when the user scrolls message list to top\n      // leverage pagination for loading another page of messages\n    },\n    handleOnType () {\n      console.log('Emit typing event')\n    },\n    editMessage(message){\n      const m = this.messageList.find(m=>m.id === message.id);\n      m.isEdited = true;\n      m.data.text = message.data.text;\n    }\n  },\n  mounted: function () {\n    this.$options.sockets.onmessage = (event) =>  { \n           console.log(event)\n      const data = JSON.parse(event.data)\n      const line = data.data;\n//    let servdata =  data.data[1]; \n//    console.log(servdata)\n     // console.log(data[1].text)\n      this.messageList = [ ...this.messageList,  { type: 'text', author: `user1`, data: { text :line.text }} ] }\n    // { type: 'text', author: `user1`, data: { text: `Добро пожаловать. Чем мы можем помочь?` } }\n    //    this.$options.sockets.onmessage = (data) => this.messageList.push(data)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n"]}]}