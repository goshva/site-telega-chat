{"remainingRequest":"/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/goshva/vue/site-telega-chat/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/goshva/vue/site-telega-chat/src/components/Chat.vue","mtime":1606161414705},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/thread-loader/dist/cjs.js","mtime":1588314379192},{"path":"/home/goshva/vue/site-telega-chat/node_modules/babel-loader/lib/index.js","mtime":1606029581549},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js","mtime":1606029583914}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2hhdCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5hbWU6ICcnLAogICAgICBpZGVudGl0eTogMCwKICAgICAgcGFydGljaXBhbnRzOiBbCiAgICAgICAgewogICAgICAgICAgaWQ6ICd1c2VyMScsCiAgICAgICAgICBuYW1lOiAn0JXQs9C+0YAnLAogICAgICAgICAgaW1hZ2VVcmw6ICdodHRwczovL3F1ZXN0MC5ydS9pbWFnZXMvaW5kZXgtMy0zLTM5MHgzMzIuanBnJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgaWQ6ICd1c2VyMicsCiAgICAgICAgICBuYW1lOiAnU3VwcG9ydCcsCiAgICAgICAgICBpbWFnZVVybDogJ2h0dHBzOi8vYXZhdGFyczMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMzcwMTg4MzI/cz0yMDAmdj00JwogICAgICAgIH0KICAgICAgXSwgLy8gdGhlIGxpc3Qgb2YgYWxsIHRoZSBwYXJ0aWNpcGFudCBvZiB0aGUgY29udmVyc2F0aW9uLiBgbmFtZWAgaXMgdGhlIHVzZXIgbmFtZSwgYGlkYCBpcyB1c2VkIHRvIGVzdGFibGlzaCB0aGUgYXV0aG9yIG9mIGEgbWVzc2FnZSwgYGltYWdlVXJsYCBpcyBzdXBwb3NlZCB0byBiZSB0aGUgdXNlciBhdmF0YXIuCiAgICAgIHRpdGxlSW1hZ2VVcmw6ICdodHRwczovL2Euc2xhY2stZWRnZS5jb20vNjZmOS9pbWcvYXZhdGFycy10ZWFtcy9hdmFfMDAwMS0zNC5wbmcnLAogICAgICBtZXNzYWdlTGlzdDogWwogICAgICAgICAgeyB0eXBlOiAndGV4dCcsIGF1dGhvcjogYHVzZXIxYCwgZGF0YTogeyB0ZXh0OiBg0JTQvtCx0YDQviDQv9C+0LbQsNC70L7QstCw0YLRjC4g0KfQtdC8INC80Ysg0LzQvtC20LXQvCDQv9C+0LzQvtGH0Yw/YCB9IH0KICAgICAgXSwgLy8gdGhlIGxpc3Qgb2YgdGhlIG1lc3NhZ2VzIHRvIHNob3csIGNhbiBiZSBwYWdpbmF0ZWQgYW5kIGFkanVzdGVkIGR5bmFtaWNhbGx5CiAgICAgIG5ld01lc3NhZ2VzQ291bnQ6IDAsCiAgICAgIGlzQ2hhdE9wZW46IGZhbHNlLCAvLyB0byBkZXRlcm1pbmUgd2hldGhlciB0aGUgY2hhdCB3aW5kb3cgc2hvdWxkIGJlIG9wZW4gb3IgY2xvc2VkCiAgICAgIHNob3dUeXBpbmdJbmRpY2F0b3I6ICcnLCAvLyB3aGVuIHNldCB0byBhIHZhbHVlIG1hdGNoaW5nIHRoZSBwYXJ0aWNpcGFudC5pZCBpdCBzaG93cyB0aGUgdHlwaW5nIGluZGljYXRvciBmb3IgdGhlIHNwZWNpZmljIHVzZXIKICAgICAgY29sb3JzOiB7CiAgICAgICAgaGVhZGVyOiB7CiAgICAgICAgICBiZzogJyM0ZThjZmYnLAogICAgICAgICAgdGV4dDogJyNmZmZmZmYnCiAgICAgICAgfSwKICAgICAgICBsYXVuY2hlcjogewogICAgICAgICAgYmc6ICcjNGU4Y2ZmJwogICAgICAgIH0sCiAgICAgICAgbWVzc2FnZUxpc3Q6IHsKICAgICAgICAgIGJnOiAnI2ZmZmZmZicKICAgICAgICB9LAogICAgICAgIHNlbnRNZXNzYWdlOiB7CiAgICAgICAgICBiZzogJyM0ZThjZmYnLAogICAgICAgICAgdGV4dDogJyNmZmZmZmYnCiAgICAgICAgfSwKICAgICAgICByZWNlaXZlZE1lc3NhZ2U6IHsKICAgICAgICAgIGJnOiAnI2VhZWFlYScsCiAgICAgICAgICB0ZXh0OiAnIzIyMjIyMicKICAgICAgICB9LAogICAgICAgIHVzZXJJbnB1dDogewogICAgICAgICAgYmc6ICcjZjRmN2Y5JywKICAgICAgICAgIHRleHQ6ICcjNTY1ODY3JwogICAgICAgIH0KICAgICAgfSwgLy8gc3BlY2lmaWVzIHRoZSBjb2xvciBzY2hlbWUgZm9yIHRoZSBjb21wb25lbnQKICAgICAgYWx3YXlzU2Nyb2xsVG9Cb3R0b206IGZhbHNlLCAvLyB3aGVuIHNldCB0byB0cnVlIGFsd2F5cyBzY3JvbGxzIHRoZSBjaGF0IHRvIHRoZSBib3R0b20gd2hlbiBuZXcgZXZlbnRzIGFyZSBpbiAobmV3IG1lc3NhZ2UsIHVzZXIgc3RhcnRzIHR5cGluZy4uLikKICAgICAgbWVzc2FnZVN0eWxpbmc6IHRydWUgLy8gZW5hYmxlcyAqYm9sZCogL2VtcGgvIF91bmRlcmxpbmVfIGFuZCBzdWNoIChtb3JlIGluZm8gYXQgZ2l0aHViLmNvbS9tYXR0ZXp6YS9tc2dkb3duKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2VuZE1lc3NhZ2UgKHRleHQpIHsKCiAgICAgIGlmICh0ZXh0Lmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLm5ld01lc3NhZ2VzQ291bnQgPSB0aGlzLmlzQ2hhdE9wZW4gPyB0aGlzLm5ld01lc3NhZ2VzQ291bnQgOiB0aGlzLm5ld01lc3NhZ2VzQ291bnQgKyAxCiAgICAgICAgCiAgICAgICAgdGhpcy5vbk1lc3NhZ2VXYXNTZW50KHsgYXV0aG9yOiAnc3VwcG9ydCcsIHR5cGU6ICd0ZXh0JywgZGF0YTogeyB0ZXh0IH0gfSkKICAgICAgfQogICAgICAgICAgICAgIC8vICRzb2NrZXQgaXMgW1dlYlNvY2tldF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dlYlNvY2tldCkgaW5zdGFuY2UKICAgICAgICAvLyBvciB3aXRoIHtmb3JtYXQ6ICdqc29uJ30gZW5hYmxlZAoKICAgICAgICAvL3RoaXMuJHNvY2tldC5zZW5kT2JqKGpzb24pCiAgICB9LAogICAgb25NZXNzYWdlV2FzU2VudCAobWVzc2FnZSkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBzZW5kcyBhIG1lc3NhZ2UKICAgICAgbGV0IGpzb24gPSBbJ2ZlZWRiYWNrX21lc3NhZ2VzJywgewogICAgICAgICAgaWRlbnRpdHk6IHRoaXMuaWRlbnRpdHksCiAgICAgICAgICB0ZXh0OiBtZXNzYWdlLmRhdGEudGV4dCwKICAgICAgICAgIHBlcnNvbjogJ3dlYi3QmtC70LjQtdC90YInCiAgICAgIH1dCiAgICAgIHRoaXMuJHNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KGpzb24pKQogICAgICB0aGlzLm1lc3NhZ2VMaXN0ID0gWyAuLi50aGlzLm1lc3NhZ2VMaXN0LCBtZXNzYWdlIF0KICAgIH0sCiAgICBvcGVuQ2hhdCAoKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgZmFiIGJ1dHRvbiB0byBvcGVuIHRoZSBjaGF0CiAgICAgIHRoaXMuaXNDaGF0T3BlbiA9IHRydWUKICAgICAgdGhpcy5uZXdNZXNzYWdlc0NvdW50ID0gMAogICAgfSwKICAgIGNsb3NlQ2hhdCAoKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgYm90dG9uIHRvIGNsb3NlIHRoZSBjaGF0CiAgICAgIHRoaXMuaXNDaGF0T3BlbiA9IGZhbHNlCiAgICB9LAogICAgaGFuZGxlU2Nyb2xsVG9Ub3AgKCkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBzY3JvbGxzIG1lc3NhZ2UgbGlzdCB0byB0b3AKICAgICAgLy8gbGV2ZXJhZ2UgcGFnaW5hdGlvbiBmb3IgbG9hZGluZyBhbm90aGVyIHBhZ2Ugb2YgbWVzc2FnZXMKICAgIH0sCiAgICBoYW5kbGVPblR5cGUgKCkgewogICAgICBjb25zb2xlLmxvZygnRW1pdCB0eXBpbmcgZXZlbnQnKQogICAgfSwKICAgIGVkaXRNZXNzYWdlKG1lc3NhZ2UpewogICAgICBjb25zdCBtID0gdGhpcy5tZXNzYWdlTGlzdC5maW5kKG09Pm0uaWQgPT09IG1lc3NhZ2UuaWQpOwogICAgICBtLmlzRWRpdGVkID0gdHJ1ZTsKICAgICAgbS5kYXRhLnRleHQgPSBtZXNzYWdlLmRhdGEudGV4dDsKICAgIH0sCiAgICBzb3VuZFBsYXkoKXsKICAgICAgdmFyIGF1ZGlvID0gbmV3IEF1ZGlvKCdpbi5tcDMnKTsKICAgICAgYXVkaW8ucGxheSgpOwogICAgfSwKICAgIGlkZ2VuKGxlbmd0aCl7CiAgICAgIHZhciByZXN1bHQgICAgICAgICAgID0gJyc7CiAgICAgIHZhciBjaGFyYWN0ZXJzICAgICAgID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5JzsKICAgICAgdmFyIGNoYXJhY3RlcnNMZW5ndGggPSBjaGFyYWN0ZXJzLmxlbmd0aDsKICAgICAgZm9yICggdmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKysgKSB7CiAgICAgICAgcmVzdWx0ICs9IGNoYXJhY3RlcnMuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJhY3RlcnNMZW5ndGgpKTsKICAgICAgfQogICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmIChsb2NhbFN0b3JhZ2UubmFtZSkgewogICAgICB0aGlzLm5hbWUgPSBsb2NhbFN0b3JhZ2UubmFtZTsKICAgIH0KICAgIGlmIChsb2NhbFN0b3JhZ2UuaWRlbnRpdHkpIHsKICAgICAgdGhpcy5pZGVudGl0eSA9IGxvY2FsU3RvcmFnZS5pZGVudGl0eTsKICAgIH0KICAgIGVsc2UgewogICAgICBsb2NhbFN0b3JhZ2UuaWRlbnRpdHkgPSAgdGhpcy5pZGdlbihNYXRoLnJhbmRvbSgpKjQ4KzE2KTsKICAgICAgdGhpcy5pZGVudGl0eSA9IGxvY2FsU3RvcmFnZS5pZGVudGl0eTsKCiAgICB9CiAgICB0aGlzLiRvcHRpb25zLnNvY2tldHMub25tZXNzYWdlID0gKGV2ZW50KSA9PiAgeyAKICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudCkKICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSkKICAgICAgY29uc3QgbGluZSA9IGRhdGFbMV0udGV4dDsKLy8gICAgbGV0IHNlcnZkYXRhID0gIGRhdGEuZGF0YVsxXTsgCi8vICAgIGNvbnNvbGUubG9nKHNlcnZkYXRhKQogICAgICBjb25zb2xlLmxvZyhsaW5lKQogICAgICBpZiAoZGF0YVsxXS5kaXJlY3Rpb24gPT0gInJlcGx5Iil7CiAgICAgICAgdGhpcy5zb3VuZFBsYXkoKTsgCiAgICAgICAgdGhpcy5tZXNzYWdlTGlzdCA9IFsgLi4udGhpcy5tZXNzYWdlTGlzdCwgIHsgdHlwZTogJ3RleHQnLCBhdXRob3I6IGBzdXBwYCwgZGF0YTogeyB0ZXh0IDpsaW5lfX0gXSB9CiAgICAgIH0KICAgIC8vIHsgdHlwZTogJ3RleHQnLCBhdXRob3I6IGB1c2VyMWAsIGRhdGE6IHsgdGV4dDogYNCU0L7QsdGA0L4g0L/QvtC20LDQu9C+0LLQsNGC0YwuINCn0LXQvCDQvNGLINC80L7QttC10Lwg0L/QvtC80L7Rh9GMP2AgfSB9CiAgICAvLyAgICB0aGlzLiRvcHRpb25zLnNvY2tldHMub25tZXNzYWdlID0gKGRhdGEpID0+IHRoaXMubWVzc2FnZUxpc3QucHVzaChkYXRhKQogIH0KfQo="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <beautiful-chat\n      :participants=\"participants\"\n      :titleImageUrl=\"titleImageUrl\"\n      :onMessageWasSent=\"onMessageWasSent\"\n      :messageList=\"messageList\"\n      :newMessagesCount=\"newMessagesCount\"\n      :isOpen=\"isChatOpen\"\n      :close=\"closeChat\"\n      :open=\"openChat\"\n      :showEmoji=\"true\"\n      :showFile=\"true\"\n      :showEdition=\"true\"\n      :showDeletion=\"true\"\n      :deletionConfirmation=\"true\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :showLauncher=\"true\"\n      :showCloseButton=\"true\"\n      :colors=\"colors\"\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\n      :disableUserListToggle=\"false\"\n      :messageStyling=\"messageStyling\"\n      @onType=\"handleOnType\"\n      @edit=\"editMessage\" />\n      \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      name: '',\n      identity: 0,\n      participants: [\n        {\n          id: 'user1',\n          name: 'Егор',\n          imageUrl: 'https://quest0.ru/images/index-3-3-390x332.jpg'\n        },\n        {\n          id: 'user2',\n          name: 'Support',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/37018832?s=200&v=4'\n        }\n      ], // the list of all the participant of the conversation. `name` is the user name, `id` is used to establish the author of a message, `imageUrl` is supposed to be the user avatar.\n      titleImageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png',\n      messageList: [\n          { type: 'text', author: `user1`, data: { text: `Добро пожаловать. Чем мы можем помочь?` } }\n      ], // the list of the messages to show, can be paginated and adjusted dynamically\n      newMessagesCount: 0,\n      isChatOpen: false, // to determine whether the chat window should be open or closed\n      showTypingIndicator: '', // when set to a value matching the participant.id it shows the typing indicator for the specific user\n      colors: {\n        header: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        launcher: {\n          bg: '#4e8cff'\n        },\n        messageList: {\n          bg: '#ffffff'\n        },\n        sentMessage: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        receivedMessage: {\n          bg: '#eaeaea',\n          text: '#222222'\n        },\n        userInput: {\n          bg: '#f4f7f9',\n          text: '#565867'\n        }\n      }, // specifies the color scheme for the component\n      alwaysScrollToBottom: false, // when set to true always scrolls the chat to the bottom when new events are in (new message, user starts typing...)\n      messageStyling: true // enables *bold* /emph/ _underline_ and such (more info at github.com/mattezza/msgdown)\n    }\n  },\n  methods: {\n    sendMessage (text) {\n\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        \n        this.onMessageWasSent({ author: 'support', type: 'text', data: { text } })\n      }\n              // $socket is [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket) instance\n        // or with {format: 'json'} enabled\n\n        //this.$socket.sendObj(json)\n    },\n    onMessageWasSent (message) {\n      // called when the user sends a message\n      let json = ['feedback_messages', {\n          identity: this.identity,\n          text: message.data.text,\n          person: 'web-Клиент'\n      }]\n      this.$socket.send(JSON.stringify(json))\n      this.messageList = [ ...this.messageList, message ]\n    },\n    openChat () {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat () {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    handleScrollToTop () {\n      // called when the user scrolls message list to top\n      // leverage pagination for loading another page of messages\n    },\n    handleOnType () {\n      console.log('Emit typing event')\n    },\n    editMessage(message){\n      const m = this.messageList.find(m=>m.id === message.id);\n      m.isEdited = true;\n      m.data.text = message.data.text;\n    },\n    soundPlay(){\n      var audio = new Audio('in.mp3');\n      audio.play();\n    },\n    idgen(length){\n      var result           = '';\n      var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var charactersLength = characters.length;\n      for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      return result;\n    }\n  },\n  mounted() {\n    if (localStorage.name) {\n      this.name = localStorage.name;\n    }\n    if (localStorage.identity) {\n      this.identity = localStorage.identity;\n    }\n    else {\n      localStorage.identity =  this.idgen(Math.random()*48+16);\n      this.identity = localStorage.identity;\n\n    }\n    this.$options.sockets.onmessage = (event) =>  { \n           console.log(event)\n      const data = JSON.parse(event.data)\n      const line = data[1].text;\n//    let servdata =  data.data[1]; \n//    console.log(servdata)\n      console.log(line)\n      if (data[1].direction == \"reply\"){\n        this.soundPlay(); \n        this.messageList = [ ...this.messageList,  { type: 'text', author: `supp`, data: { text :line}} ] }\n      }\n    // { type: 'text', author: `user1`, data: { text: `Добро пожаловать. Чем мы можем помочь?` } }\n    //    this.$options.sockets.onmessage = (data) => this.messageList.push(data)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n"]}]}