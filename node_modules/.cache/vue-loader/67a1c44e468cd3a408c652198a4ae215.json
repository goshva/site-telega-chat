{"remainingRequest":"/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/goshva/vue/site-telega-chat/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/goshva/vue/site-telega-chat/src/components/Chat.vue","mtime":1606042424806},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/babel-loader/lib/index.js","mtime":1606029581549},{"path":"/home/goshva/vue/site-telega-chat/node_modules/cache-loader/dist/cjs.js","mtime":1588314378619},{"path":"/home/goshva/vue/site-telega-chat/node_modules/vue-loader/lib/index.js","mtime":1606029583914}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2hhdCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhcnRpY2lwYW50czogWwogICAgICAgIHsKICAgICAgICAgIGlkOiAndXNlcjEnLAogICAgICAgICAgbmFtZTogJ01hdHRlbycsCiAgICAgICAgICBpbWFnZVVybDogJ2h0dHBzOi8vYXZhdGFyczMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMTkxNTk4OT9zPTIzMCZ2PTQnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBpZDogJ3VzZXIyJywKICAgICAgICAgIG5hbWU6ICdTdXBwb3J0JywKICAgICAgICAgIGltYWdlVXJsOiAnaHR0cHM6Ly9hdmF0YXJzMy5naXRodWJ1c2VyY29udGVudC5jb20vdS8zNzAxODgzMj9zPTIwMCZ2PTQnCiAgICAgICAgfQogICAgICBdLCAvLyB0aGUgbGlzdCBvZiBhbGwgdGhlIHBhcnRpY2lwYW50IG9mIHRoZSBjb252ZXJzYXRpb24uIGBuYW1lYCBpcyB0aGUgdXNlciBuYW1lLCBgaWRgIGlzIHVzZWQgdG8gZXN0YWJsaXNoIHRoZSBhdXRob3Igb2YgYSBtZXNzYWdlLCBgaW1hZ2VVcmxgIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSB1c2VyIGF2YXRhci4KICAgICAgdGl0bGVJbWFnZVVybDogJ2h0dHBzOi8vYS5zbGFjay1lZGdlLmNvbS82NmY5L2ltZy9hdmF0YXJzLXRlYW1zL2F2YV8wMDAxLTM0LnBuZycsCiAgICAgIG1lc3NhZ2VMaXN0OiBbCiAgICAgICAgICB7IHR5cGU6ICd0ZXh0JywgYXV0aG9yOiBgbWVgLCBkYXRhOiB7IHRleHQ6IGBTYXkgeWVzIWAgfSB9LAogICAgICAgICAgeyB0eXBlOiAndGV4dCcsIGF1dGhvcjogYHVzZXIxYCwgZGF0YTogeyB0ZXh0OiBgTm8uYCB9IH0KICAgICAgXSwgLy8gdGhlIGxpc3Qgb2YgdGhlIG1lc3NhZ2VzIHRvIHNob3csIGNhbiBiZSBwYWdpbmF0ZWQgYW5kIGFkanVzdGVkIGR5bmFtaWNhbGx5CiAgICAgIG5ld01lc3NhZ2VzQ291bnQ6IDAsCiAgICAgIGlzQ2hhdE9wZW46IGZhbHNlLCAvLyB0byBkZXRlcm1pbmUgd2hldGhlciB0aGUgY2hhdCB3aW5kb3cgc2hvdWxkIGJlIG9wZW4gb3IgY2xvc2VkCiAgICAgIHNob3dUeXBpbmdJbmRpY2F0b3I6ICcnLCAvLyB3aGVuIHNldCB0byBhIHZhbHVlIG1hdGNoaW5nIHRoZSBwYXJ0aWNpcGFudC5pZCBpdCBzaG93cyB0aGUgdHlwaW5nIGluZGljYXRvciBmb3IgdGhlIHNwZWNpZmljIHVzZXIKICAgICAgY29sb3JzOiB7CiAgICAgICAgaGVhZGVyOiB7CiAgICAgICAgICBiZzogJyM0ZThjZmYnLAogICAgICAgICAgdGV4dDogJyNmZmZmZmYnCiAgICAgICAgfSwKICAgICAgICBsYXVuY2hlcjogewogICAgICAgICAgYmc6ICcjNGU4Y2ZmJwogICAgICAgIH0sCiAgICAgICAgbWVzc2FnZUxpc3Q6IHsKICAgICAgICAgIGJnOiAnI2ZmZmZmZicKICAgICAgICB9LAogICAgICAgIHNlbnRNZXNzYWdlOiB7CiAgICAgICAgICBiZzogJyM0ZThjZmYnLAogICAgICAgICAgdGV4dDogJyNmZmZmZmYnCiAgICAgICAgfSwKICAgICAgICByZWNlaXZlZE1lc3NhZ2U6IHsKICAgICAgICAgIGJnOiAnI2VhZWFlYScsCiAgICAgICAgICB0ZXh0OiAnIzIyMjIyMicKICAgICAgICB9LAogICAgICAgIHVzZXJJbnB1dDogewogICAgICAgICAgYmc6ICcjZjRmN2Y5JywKICAgICAgICAgIHRleHQ6ICcjNTY1ODY3JwogICAgICAgIH0KICAgICAgfSwgLy8gc3BlY2lmaWVzIHRoZSBjb2xvciBzY2hlbWUgZm9yIHRoZSBjb21wb25lbnQKICAgICAgYWx3YXlzU2Nyb2xsVG9Cb3R0b206IGZhbHNlLCAvLyB3aGVuIHNldCB0byB0cnVlIGFsd2F5cyBzY3JvbGxzIHRoZSBjaGF0IHRvIHRoZSBib3R0b20gd2hlbiBuZXcgZXZlbnRzIGFyZSBpbiAobmV3IG1lc3NhZ2UsIHVzZXIgc3RhcnRzIHR5cGluZy4uLikKICAgICAgbWVzc2FnZVN0eWxpbmc6IHRydWUgLy8gZW5hYmxlcyAqYm9sZCogL2VtcGgvIF91bmRlcmxpbmVfIGFuZCBzdWNoIChtb3JlIGluZm8gYXQgZ2l0aHViLmNvbS9tYXR0ZXp6YS9tc2dkb3duKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2VuZE1lc3NhZ2UgKHRleHQpIHsKICAgICAgaWYgKHRleHQubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMubmV3TWVzc2FnZXNDb3VudCA9IHRoaXMuaXNDaGF0T3BlbiA/IHRoaXMubmV3TWVzc2FnZXNDb3VudCA6IHRoaXMubmV3TWVzc2FnZXNDb3VudCArIDEKICAgICAgICB0aGlzLm9uTWVzc2FnZVdhc1NlbnQoeyBhdXRob3I6ICdzdXBwb3J0JywgdHlwZTogJ3RleHQnLCBkYXRhOiB7IHRleHQgfSB9KQogICAgICB9CiAgICB9LAogICAgb25NZXNzYWdlV2FzU2VudCAobWVzc2FnZSkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBzZW5kcyBhIG1lc3NhZ2UKICAgICAgdGhpcy5tZXNzYWdlTGlzdCA9IFsgLi4udGhpcy5tZXNzYWdlTGlzdCwgbWVzc2FnZSBdCiAgICB9LAogICAgb3BlbkNoYXQgKCkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIGZhYiBidXR0b24gdG8gb3BlbiB0aGUgY2hhdAogICAgICB0aGlzLmlzQ2hhdE9wZW4gPSB0cnVlCiAgICAgIHRoaXMubmV3TWVzc2FnZXNDb3VudCA9IDAKICAgIH0sCiAgICBjbG9zZUNoYXQgKCkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIGJvdHRvbiB0byBjbG9zZSB0aGUgY2hhdAogICAgICB0aGlzLmlzQ2hhdE9wZW4gPSBmYWxzZQogICAgfSwKICAgIGhhbmRsZVNjcm9sbFRvVG9wICgpIHsKICAgICAgLy8gY2FsbGVkIHdoZW4gdGhlIHVzZXIgc2Nyb2xscyBtZXNzYWdlIGxpc3QgdG8gdG9wCiAgICAgIC8vIGxldmVyYWdlIHBhZ2luYXRpb24gZm9yIGxvYWRpbmcgYW5vdGhlciBwYWdlIG9mIG1lc3NhZ2VzCiAgICB9LAogICAgaGFuZGxlT25UeXBlICgpIHsKICAgICAgY29uc29sZS5sb2coJ0VtaXQgdHlwaW5nIGV2ZW50JykKICAgIH0sCiAgICBlZGl0TWVzc2FnZShtZXNzYWdlKXsKICAgICAgY29uc3QgbSA9IHRoaXMubWVzc2FnZUxpc3QuZmluZChtPT5tLmlkID09PSBtZXNzYWdlLmlkKTsKICAgICAgbS5pc0VkaXRlZCA9IHRydWU7CiAgICAgIG0uZGF0YS50ZXh0ID0gbWVzc2FnZS5kYXRhLnRleHQ7CiAgICB9CiAgfQp9Cgo="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <beautiful-chat\n      :participants=\"participants\"\n      :titleImageUrl=\"titleImageUrl\"\n      :onMessageWasSent=\"onMessageWasSent\"\n      :messageList=\"messageList\"\n      :newMessagesCount=\"newMessagesCount\"\n      :isOpen=\"isChatOpen\"\n      :close=\"closeChat\"\n      :open=\"openChat\"\n      :showEmoji=\"true\"\n      :showFile=\"true\"\n      :showEdition=\"true\"\n      :showDeletion=\"true\"\n      :deletionConfirmation=\"true\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :showLauncher=\"true\"\n      :showCloseButton=\"true\"\n      :colors=\"colors\"\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\n      :disableUserListToggle=\"false\"\n      :messageStyling=\"messageStyling\"\n      @onType=\"handleOnType\"\n      @keyup.enter.native=\"sendMessage\"\n      @edit=\"editMessage\" />\n      test\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      participants: [\n        {\n          id: 'user1',\n          name: 'Matteo',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/1915989?s=230&v=4'\n        },\n        {\n          id: 'user2',\n          name: 'Support',\n          imageUrl: 'https://avatars3.githubusercontent.com/u/37018832?s=200&v=4'\n        }\n      ], // the list of all the participant of the conversation. `name` is the user name, `id` is used to establish the author of a message, `imageUrl` is supposed to be the user avatar.\n      titleImageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png',\n      messageList: [\n          { type: 'text', author: `me`, data: { text: `Say yes!` } },\n          { type: 'text', author: `user1`, data: { text: `No.` } }\n      ], // the list of the messages to show, can be paginated and adjusted dynamically\n      newMessagesCount: 0,\n      isChatOpen: false, // to determine whether the chat window should be open or closed\n      showTypingIndicator: '', // when set to a value matching the participant.id it shows the typing indicator for the specific user\n      colors: {\n        header: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        launcher: {\n          bg: '#4e8cff'\n        },\n        messageList: {\n          bg: '#ffffff'\n        },\n        sentMessage: {\n          bg: '#4e8cff',\n          text: '#ffffff'\n        },\n        receivedMessage: {\n          bg: '#eaeaea',\n          text: '#222222'\n        },\n        userInput: {\n          bg: '#f4f7f9',\n          text: '#565867'\n        }\n      }, // specifies the color scheme for the component\n      alwaysScrollToBottom: false, // when set to true always scrolls the chat to the bottom when new events are in (new message, user starts typing...)\n      messageStyling: true // enables *bold* /emph/ _underline_ and such (more info at github.com/mattezza/msgdown)\n    }\n  },\n  methods: {\n    sendMessage (text) {\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        this.onMessageWasSent({ author: 'support', type: 'text', data: { text } })\n      }\n    },\n    onMessageWasSent (message) {\n      // called when the user sends a message\n      this.messageList = [ ...this.messageList, message ]\n    },\n    openChat () {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat () {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    handleScrollToTop () {\n      // called when the user scrolls message list to top\n      // leverage pagination for loading another page of messages\n    },\n    handleOnType () {\n      console.log('Emit typing event')\n    },\n    editMessage(message){\n      const m = this.messageList.find(m=>m.id === message.id);\n      m.isEdited = true;\n      m.data.text = message.data.text;\n    }\n  }\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n"]}]}